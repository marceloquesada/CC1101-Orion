#define CC1101_IOCFG2         0x0000 //GDO2 Output Pin Configuration
#define CC1101_IOCFG1         0x0001 //GDO1 Output Pin Configuration
#define CC1101_IOCFG0         0x0002 //GDO0 Output Pin Configuration
#define CC1101_FIFOTHR        0x0003 //RX FIFO and TX FIFO Thresholds
#define CC1101_SYNC1          0x0004 //Sync Word, High Byte
#define CC1101_SYNC0          0x0005 //Sync Word, Low Byte
#define CC1101_PKTLEN         0x0006 //Packet Length
#define CC1101_PKTCTRL1       0x0007 //Packet Automation Control
#define CC1101_PKTCTRL0       0x0008 //Packet Automation Control
#define CC1101_ADDR           0x0009 //Device Address
#define CC1101_CHANNR         0x000A //Channel Number
#define CC1101_FSCTRL1        0x000B //Frequency Synthesizer Control
#define CC1101_FSCTRL0        0x000C //Frequency Synthesizer Control
#define CC1101_FREQ2          0x000D //Frequency Control Word, High Byte
#define CC1101_FREQ1          0x000E //Frequency Control Word, Middle Byte
#define CC1101_FREQ0          0x000F //Frequency Control Word, Low Byte
#define CC1101_MDMCFG4        0x0010 //Modem Configuration
#define CC1101_MDMCFG3        0x0011 //Modem Configuration
#define CC1101_MDMCFG2        0x0012 //Modem Configuration
#define CC1101_MDMCFG1        0x0013 //Modem Configuration
#define CC1101_MDMCFG0        0x0014 //Modem Configuration
#define CC1101_DEVIATN        0x0015 //Modem Deviation Setting
#define CC1101_MCSM2          0x0016 //Main Radio Control State Machine Configuration
#define CC1101_MCSM1          0x0017 //Main Radio Control State Machine Configuration
#define CC1101_MCSM0          0x0018 //Main Radio Control State Machine Configuration
#define CC1101_FOCCFG         0x0019 //Frequency Offset Compensation Configuration
#define CC1101_BSCFG          0x001A //Bit Synchronization Configuration
#define CC1101_AGCCTRL2       0x001B //AGC Control
#define CC1101_AGCCTRL1       0x001C //AGC Control
#define CC1101_AGCCTRL0       0x001D //AGC Control
#define CC1101_WOREVT1        0x001E //High Byte Event0 Timeout
#define CC1101_WOREVT0        0x001F //Low Byte Event0 Timeout
#define CC1101_WORCTRL        0x0020 //Wake On Radio Control
#define CC1101_FREND1         0x0021 //Front End RX Configuration
#define CC1101_FREND0         0x0022 //Front End TX Configuration
#define CC1101_FSCAL3         0x0023 //Frequency Synthesizer Calibration
#define CC1101_FSCAL2         0x0024 //Frequency Synthesizer Calibration
#define CC1101_FSCAL1         0x0025 //Frequency Synthesizer Calibration
#define CC1101_FSCAL0         0x0026 //Frequency Synthesizer Calibration
#define CC1101_RCCTRL1        0x0027 //RC Oscillator Configuration
#define CC1101_RCCTRL0        0x0028 //RC Oscillator Configuration
#define CC1101_FSTEST         0x0029 //Frequency Synthesizer Calibration Control
#define CC1101_PTEST          0x002A //Production Test
#define CC1101_AGCTEST        0x002B //AGC Test
#define CC1101_TEST2          0x002C //Various Test Settings
#define CC1101_TEST1          0x002D //Various Test Settings
#define CC1101_TEST0          0x002E //Various Test Settings
#define CC1101_PARTNUM        0x0030 //Chip ID
#define CC1101_VERSION        0x0031 //Chip ID
#define CC1101_FREQEST        0x0032 //Frequency Offset Estimate from Demodulator
#define CC1101_LQI            0x0033 //Demodulator Estimate for Link Quality
#define CC1101_RSSI           0x0034 //Received Signal Strength Indication
#define CC1101_MARCSTATE      0x0035 //Main Radio Control State Machine State
#define CC1101_WORTIME1       0x0036 //High Byte of WOR Time
#define CC1101_WORTIME0       0x0037 //Low Byte of WOR Time
#define CC1101_PKTSTATUS      0x0038 //Current GDOx Status and Packet Status
#define CC1101_VCO_VC_DAC     0x0039 //Current Setting from PLL Calibration Module
#define CC1101_TXBYTES        0x003A //Underflow and Number of Bytes
#define CC1101_RXBYTES        0x003B //Overflow and Number of Bytes
#define CC1101_RCCTRL1_STATUS 0x003C //Last RC Oscillator Calibration Result
#define CC1101_RCCTRL0_STATUS 0x003D //Last RC Oscillator Calibration Result
---------------------------------------------------
SpiWriteReg(CC1101_IOCFG2,0x29);
SpiWriteReg(CC1101_IOCFG1,0x2E);
SpiWriteReg(CC1101_IOCFG0,0x06);
SpiWriteReg(CC1101_FIFOTHR,0x47);
SpiWriteReg(CC1101_SYNC1,0xD3);
SpiWriteReg(CC1101_SYNC0,0x91);
SpiWriteReg(CC1101_PKTLEN,0xFF);
SpiWriteReg(CC1101_PKTCTRL1,0x04);
SpiWriteReg(CC1101_PKTCTRL0,0x05);
SpiWriteReg(CC1101_ADDR,0x00);
SpiWriteReg(CC1101_CHANNR,0x00);
SpiWriteReg(CC1101_FSCTRL1,0x06);
SpiWriteReg(CC1101_FSCTRL0,0x00);
SpiWriteReg(CC1101_FREQ2,0x10);
SpiWriteReg(CC1101_FREQ1,0xD8);
SpiWriteReg(CC1101_FREQ0,0x9D);
SpiWriteReg(CC1101_MDMCFG4,0xF5);
SpiWriteReg(CC1101_MDMCFG3,0x83);
SpiWriteReg(CC1101_MDMCFG2,0x33);
SpiWriteReg(CC1101_MDMCFG1,0x22);
SpiWriteReg(CC1101_MDMCFG0,0xF8);
SpiWriteReg(CC1101_DEVIATN,0x15);
SpiWriteReg(CC1101_MCSM2,0x07);
SpiWriteReg(CC1101_MCSM1,0x30);
SpiWriteReg(CC1101_MCSM0,0x18);
SpiWriteReg(CC1101_FOCCFG,0x16);
SpiWriteReg(CC1101_BSCFG,0x6C);
SpiWriteReg(CC1101_AGCCTRL2,0x03);
SpiWriteReg(CC1101_AGCCTRL1,0x40);
SpiWriteReg(CC1101_AGCCTRL0,0x91);
SpiWriteReg(CC1101_WOREVT1,0x87);
SpiWriteReg(CC1101_WOREVT0,0x6B);
SpiWriteReg(CC1101_WORCTRL,0xFB);
SpiWriteReg(CC1101_FREND1,0x56);
SpiWriteReg(CC1101_FREND0,0x11);
SpiWriteReg(CC1101_FSCAL3,0xE9);
SpiWriteReg(CC1101_FSCAL2,0x2A);
SpiWriteReg(CC1101_FSCAL1,0x00);
SpiWriteReg(CC1101_FSCAL0,0x1F);
SpiWriteReg(CC1101_RCCTRL1,0x41);
SpiWriteReg(CC1101_RCCTRL0,0x00);
SpiWriteReg(CC1101_FSTEST,0x59);
SpiWriteReg(CC1101_PTEST,0x7F);
SpiWriteReg(CC1101_AGCTEST,0x3F);
SpiWriteReg(CC1101_TEST2,0x81);
SpiWriteReg(CC1101_TEST1,0x35);
SpiWriteReg(CC1101_TEST0,0x09);
SpiWriteReg(CC1101_PARTNUM,0x00);
SpiWriteReg(CC1101_VERSION,0x04);
SpiWriteReg(CC1101_FREQEST,0x00);
SpiWriteReg(CC1101_LQI,0x00);
SpiWriteReg(CC1101_RSSI,0x00);
SpiWriteReg(CC1101_MARCSTATE,0x00);
SpiWriteReg(CC1101_WORTIME1,0x00);
SpiWriteReg(CC1101_WORTIME0,0x00);
SpiWriteReg(CC1101_PKTSTATUS,0x00);
SpiWriteReg(CC1101_VCO_VC_DAC,0x00);
SpiWriteReg(CC1101_TXBYTES,0x00);
SpiWriteReg(CC1101_RXBYTES,0x00);
SpiWriteReg(CC1101_RCCTRL1_STATUS,0x00);
SpiWriteReg(CC1101_RCCTRL0_STATUS,0x00);
